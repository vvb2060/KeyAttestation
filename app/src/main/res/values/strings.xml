<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">Key Attestation</string>
    <string name="use_shizuku">Use Shizuku</string>
    <string name="use_sak">Use Knox attestation</string>
    <string name="use_strongbox">Use StrongBox</string>
    <string name="use_attest_key">Use attest key</string>
    <string name="import_attest_key">Import attest key</string>
    <string name="attest_device_props">Attest device props</string>
    <string name="id_type_serial">Attest device serial</string>
    <string name="id_type_imei">Attest device IMEI</string>
    <string name="id_type_meid">Attest device MEID</string>
    <string name="include_unique_id">Include unique ID</string>
    <string name="rkp_test">RKP test</string>
    <string name="reset">Reset</string>
    <string name="load_certs">Load from file</string>
    <string name="save_certs">Save to file</string>
    <string name="about">About</string>
    <string name="open_source_info">This software is open source under %2$s (%1$s).</string>
    <string name="install_shizuku">Install Shizuku to use ID attestation (%s).</string>
    <string name="start_shizuku">Shizuku is not running.</string>

    <string name="bootloader_locked">Bootloader is locked</string>
    <string name="bootloader_user">Root of trust set by end user</string>
    <string name="bootloader_unlocked">Bootloader is unlocked</string>
    <string name="bootloader_unknown">Bootloader status is unknown</string>
    <string name="bootloader_summary_sw_level">This device does not support hardware-level key attestation.</string>
    <string name="cert_chain_not_trusted">Certificate chain is not trusted</string>
    <string name="cert_chain_not_trusted_summary">A certificate has been revoked or signature verification failed in the certificate chain.</string>
    <string name="unknown_root_cert">Unknown root certificate</string>
    <string name="unknown_root_cert_summary">Root certificate is not a known trusted certificate authority.</string>
    <string name="aosp_root_cert">AOSP software attestation root certificate</string>
    <string name="aosp_root_cert_summary">Private key of attestation key is well-known, the certificate chain can be tampered with.</string>
    <string name="google_root_cert">Google hardware attestation root certificate</string>
    <string name="google_root_cert_summary">GMS compatible devices can use an attestation key signed by Google.</string>
    <string name="google_root_cert_rkp">Google remote key provisioning</string>
    <string name="google_root_cert_rkp_summary">Remotely provisioned attestation key has stronger security and higher availability.</string>
    <string name="knox_root_cert">Samsung Knox attestation root certificate</string>
    <string name="knox_root_cert_summary">Knox attestation is signed using Samsung attestation key (SAK).</string>
    <string name="oem_root_cert">OEM root certificate</string>
    <string name="oem_root_cert_summary">This device trusts this root certificate, but it may not be trusted by others.</string>

    <string name="cert_chain">Certificate chain</string>
    <string name="cert_chain_description">Certificate chain is a list of certificates used to authenticate a key. The chain starts with the certificate associated with that key, and each certificate is signed by the next in the chain. The chain ends with a root certificate, and the trustworthiness of the attestation depends on the root certificate of the chain..</string>
    <string name="cert_info">Certificate info</string>
    <string name="cert_subject">subject: </string>
    <string name="cert_not_before">not before: </string>
    <string name="cert_not_after">not after: </string>
    <string name="cert_error_sign">signature error: </string>
    <string name="cert_error_revoked">revoked: </string>
    <string name="cert_error_expired">expired: </string>
    <string name="provisioning_info_certs_issued">number of certs issued in last 30 days: </string>
    <string name="provisioning_info_manufacturer">manufacturer: </string>

    <string name="error_message_subtitle">Detailed messages:</string>
    <string name="error_unknown">Unknown error</string>
    <string name="error_unavailable">Unable to attest</string>
    <string name="error_unavailable_summary">
    Attest failed. Adjust options in the menu and try again.
    A common reason for consistently failing to attest is the inability to use the factory provisioned attestation key,
    possibly due to a misconfigured device or a corrupt persist partition.
    </string>
    <string name="error_cant_parse_cert">Unable to parse certificate</string>
    <string name="error_cant_parse_cert_summary">
    The certificate format is incorrect or contains unsupported features.
    </string>
    <string name="error_strongbox_unavailable">StrongBox not available</string>
    <string name="error_strongbox_unavailable_summary">
    This device is declared to have StrongBox support, but it is currently unavailable.
    </string>
    <string name="error_deviceids_unavailable">Unable to attest device IDs</string>
    <string name="error_deviceids_unavailable_summary">
    This device is declared to have ID attestation support, but IDs do not exist, do not match,
    or the device can no longer attest its IDs. Adjust options in the menu and try again.
    </string>
    <string name="error_out_of_keys">No remotely provisioned keys for attestation</string>
    <string name="error_out_of_keys_summary">
    This device is not registered with the key provisioning server, or the server permanently refuses to issue keys.
    </string>
    <string name="error_out_of_keys_transient">Currently no remotely provisioned keys for attestation</string>
    <string name="error_out_of_keys_transient_summary">
    The key pool is exhausted. Please retry after networking.
    If the server temporarily refuses to issue keys, check for system updates.
    </string>
    <string name="error_unavailable_transient">Currently unable to attest</string>
    <string name="error_unavailable_transient_summary">
    The problem is temporary. Adjust options in the menu or try again later.
    </string>
    <string name="error_keys_not_provisioned">No attestation keys</string>
    <string name="error_keys_not_provisioned_summary">
    Unable to fetch remotely provisioned attestation keys, and no factory provisioned attestation keys.
    </string>
    <string name="error_remote_key_provisioning">Remote Key Provisioning Error</string>
    <string name="error_remote_key_provisioning_summary">
    Unable to fetch attestation key from key provisioning server.
    </string>

    <string name="rpc_hardware_info">Hardware info</string>
    <string name="rpc_hardware_info_description">
    The hardware information of remotely provisioned component.
    </string>
    <string name="rpc_version_number">Version</string>
    <string name="rpc_version_number_description">
    Implementation version of the remotely provisioned component hardware.
    The version provided here must match the version reported in the CsrPayload produced by the HAL interface.
    </string>
    <string name="rpc_author_name">Vendor</string>
    <string name="rpc_author_name_description">
    The organization name of the author of the IRemotelyProvisionedComponent implementation.
    </string>
    <string name="rpc_unique_id">Identifier</string>
    <string name="rpc_unique_id_description">
    An opaque identifier for this IRemotelyProvisionedComponent implementation.
    Each implementation must have a distinct identifier from all other implementations, and it must be consistent across all devices.
    </string>
    <string name="rkp_device_info">Device info</string>
    <string name="rkp_device_info_description">
    Device info contains information about the device that is signed by the IRemotelyProvisionedComponent HAL.
    These values are intended to be checked by the server to verify that the certificate signing request,
    crafted by an IRemotelyProvisionedComponent HAL instance is coming from the expected device
    based on values initially uploaded during device\'s manufacture at the factory.
    </string>
    <string name="rkp_hostname">Remote provisioning hostname</string>
    <string name="rkp_hostname_empty">Remote key provisioning disabled</string>

    <string name="attestation">Attestation</string>
    <string name="attestation_version_description"><![CDATA[<font face="sans-serif-medium">Version:</font><br>The version of the key attestation feature.]]></string>
    <string name="keymaster" translatable="false">Keymaster / KeyMint</string>
    <string name="keymaster_version_description"><![CDATA[<font face="sans-serif-medium">Version:</font><br>The version of the Keymaster or KeyMint hardware abstraction layer (HAL).]]></string>
    <string name="security_level_description"><![CDATA[<font face="sans-serif-medium">Security level:</font><br>This data structure indicates the extent to which a software feature, such as a key pair, is protected based on its location on the device.<p><ul><li gap="8sp"><font face="sans-serif-medium">Software</font><br>The logic for creating and managing the feature is implemented in the Android system. For the purposes of creating and storing key pairs, this location is less secure than the TEE but is more secure than your app\'s process space.</li><li gap="8sp"><font face="sans-serif-medium">TrustedEnvironment</font><br>The logic for creating and managing the feature is implemented in secure hardware, such as a TEE. For the purposes of creating and storing key pairs, this location is more secure because secure hardware is highly resistant to remote compromise.</li><li gap="8sp"><font face="sans-serif-medium">StrongBox</font><br>The logic for creating and managing the feature is implemented in a dedicated <a href="https://developer.android.com/training/articles/keystore#HardwareSecurityModule">Hardware security module</a>. For the purposes of creating and storing key pairs, this location is more secure because it is highly resistant to remote compromise and hardware attacks against the module.</li></ul>]]></string>
    <string name="attestation_summary_format">Version: %1$s\nSecurity level: %2$s</string>
    <string name="attestation_challenge">Attestation challenge</string>
    <string name="attestation_challenge_description">Contains the challenge that was provided at key creation time. Check whether this value matches the value your server provided. Otherwise, your service might be vulnerable to replaying of old attestation certificates.</string>
    <string name="unique_id">Unique ID</string>
    <string name="unique_id_description"><![CDATA[This value identifies the device, but only for a limited period of time. It is <a href="https://source.android.com/security/keystore/attestation#unique-id">computed</a> and is only used by system apps. In all other apps, uniqueId is empty.]]></string>

    <string name="empty">(empty)</string>
    <string name="security_level_software">Software</string>
    <string name="security_level_trusted_environment">TrustedEnvironment</string>
    <string name="security_level_strongbox">StrongBox</string>

    <string name="sw_enforced" translatable="false">SW</string>
    <string name="sw_enforced_description"><![CDATA[This item is enforced by the Android system, not by the device\'s hardware.]]></string>
    <string name="tee_enforced" translatable="false">HW</string>
    <string name="tee_enforced_description"><![CDATA[This item is enforced by the device\'s hardware.]]></string>

    <string name="authorization_list">Authorization list</string>
    <string name="authorization_list_purpose">Purpose</string>
    <string name="authorization_list_algorithm">Algorithm</string>
    <string name="authorization_list_keySize">Key size</string>
    <string name="authorization_list_digest">Digests</string>
    <string name="authorization_list_padding">Padding</string>
    <string name="authorization_list_ecCurve">EC curve</string>
    <string name="authorization_list_rsaPublicExponent">RSA public exponent</string>
    <string name="authorization_list_rollbackResistance">Rollback resistance</string>
    <string name="authorization_list_activeDateTime">Active date time</string>
    <string name="authorization_list_originationExpireDateTime">Origination expire date time</string>
    <string name="authorization_list_usageExpireDateTime">Usage expire date time</string>
    <string name="authorization_list_noAuthRequired">No auth required</string>
    <string name="authorization_list_userAuthType">User auth type</string>
    <string name="authorization_list_authTimeout">Auth timeout</string>
    <string name="authorization_list_allowWhileOnBody">Allow while on body</string>
    <string name="authorization_list_trustedUserPresenceRequired">Trusted user presence required</string>
    <string name="authorization_list_trustedConfirmationRequired">Trusted confirmation required</string>
    <string name="authorization_list_unlockedDeviceRequired">Unlocked device required</string>
    <string name="authorization_list_allApplications">All apps</string>
    <string name="authorization_list_applicationId">App ID</string>
    <string name="authorization_list_creationDateTime">Creation date time</string>
    <string name="authorization_list_origin">Origin</string>
    <string name="authorization_list_rollbackResistant">Rollback resistant</string>
    <string name="authorization_list_rootOfTrust">Root of trust</string>
    <string name="authorization_list_osVersion">OS version</string>
    <string name="authorization_list_osPatchLevel">OS patch level</string>
    <string name="authorization_list_attestationApplicationId">app ID</string>
    <string name="authorization_list_attestationIdBrand">brand</string>
    <string name="authorization_list_attestationIdDevice">device</string>
    <string name="authorization_list_attestationIdProduct">product</string>
    <string name="authorization_list_attestationIdSerial">serial</string>
    <string name="authorization_list_attestationIdImei">IMEI</string>
    <string name="authorization_list_attestationIdSecondImei">second IMEI</string>
    <string name="authorization_list_attestationIdMeid">MEID</string>
    <string name="authorization_list_attestationIdManufacturer">manufacturer</string>
    <string name="authorization_list_attestationIdModel">model</string>
    <string name="authorization_list_vendorPatchLevel">Vendor patch level</string>
    <string name="authorization_list_bootPatchLevel">Boot patch level</string>
    <string name="authorization_list_mgfDigest">Rsa Oaep Mgf Digest</string>
    <string name="authorization_list_earlyBootOnly">Early boot only</string>
    <string name="authorization_list_usageCountLimit">Usage count limit</string>
    <string name="authorization_list_deviceUniqueAttestation">Device unique attestation</string>
    <string name="authorization_list_identityCredentialKey">Identity credential key</string>
    <string name="authorization_list_moduleHash">Module hash</string>

    <string name="authorization_list_description"><![CDATA[
    This data structure contains the key pair\'s properties themselves, as defined in the Keymaster or KeyMint hardware abstraction layer (HAL). You compare these values to the device\'s current state or to a set of expected values to verify that a key pair is still valid for use in your app.
    ]]></string>
    <string name="authorization_list_purpose_description"><![CDATA[
    Specifies the set of purposes for which the key may be used.
    ]]></string>
    <string name="authorization_list_algorithm_description"><![CDATA[
    Specifies the cryptographic algorithm with which the key is used. In an attestation AuthorizationList object, the algorithm value is always RSA or EC.
    ]]></string>
    <string name="authorization_list_keySize_description"><![CDATA[
    Specifies the size, in bits, of the key, measuring in the normal way for the key\'s algorithm.
    ]]></string>
    <string name="authorization_list_digest_description"><![CDATA[
    Specifies the digest algorithms that may be used with the key to perform signing and verification operations. This tag is relevant to RSA, ECDSA and HMAC keys.
    ]]></string>
    <string name="authorization_list_padding_description"><![CDATA[
    Specifies the padding modes that may be used with the key. This tag is relevant to RSA and AES keys.
    ]]></string>
    <string name="authorization_list_ecCurve_description"><![CDATA[
    The set of parameters used to generate an elliptic curve (EC) key pair, which uses ECDSA for signing and verification, within the Android system keystore.
    ]]></string>
    <string name="authorization_list_rsaPublicExponent_description"><![CDATA[
    Specifies the value of the public exponent for an RSA key pair. This tag is relevant only to RSA keys, and necessary for all RSA keys.
    ]]></string>
    <string name="authorization_list_rollbackResistance_description"><![CDATA[
    Indicates that the key is rollback-resistant, meaning that when deleted by deleteKey or deleteAllKeys, the key is guaranteed to be permanently deleted and unusable. It\'s possible that keys without this tag could be deleted and then restored from backup.
    ]]></string>
    <string name="authorization_list_activeDateTime_description"><![CDATA[
    Specifies the date and time at which the key becomes active.
    ]]></string>
    <string name="authorization_list_originationExpireDateTime_description"><![CDATA[
    Specifies the date and time at which the key expires for signing and encryption purposes.
    ]]></string>
    <string name="authorization_list_usageExpireDateTime_description"><![CDATA[
    Specifies the date and time at which the key expires for verification and decryption purposes.
    ]]></string>
    <string name="authorization_list_noAuthRequired_description"><![CDATA[
    Specifies that no authentication is required to use this key.
    ]]></string>
    <string name="authorization_list_userAuthType_description"><![CDATA[
    Specifies the types of user authenticators that may be used to authorize this key.
    ]]></string>
    <string name="authorization_list_authTimeout_description"><![CDATA[
    Specifies the time in seconds for which the key is authorized for use, after authentication.
    ]]></string>
    <string name="authorization_list_allowWhileOnBody_description"><![CDATA[
    Allows the key to be used after its authentication timeout period if the user is still wearing the device on their body. Note that a secure on-body sensor determines whether the device is being worn on the user\'s body.
    ]]></string>
    <string name="authorization_list_trustedUserPresenceRequired_description"><![CDATA[
    Specifies that this key is usable only if the user has provided proof of physical presence.
    ]]></string>
    <string name="authorization_list_trustedConfirmationRequired_description"><![CDATA[
    Specifies that the key is usable only if the user provides confirmation of the data to be signed using an approval token.
    ]]></string>
    <string name="authorization_list_unlockedDeviceRequired_description"><![CDATA[
    Require the device screen to be unlocked if the key is used.
    ]]></string>
    <string name="authorization_list_allApplications_description"><![CDATA[
    Indicates whether all apps on a device can access the key pair.
    ]]></string>
    <string name="authorization_list_applicationId_description"><![CDATA[
    When provided to generateKey or importKey, this tag specifies data that is necessary during all uses of the key.
    ]]></string>
    <string name="authorization_list_creationDateTime_description"><![CDATA[
    Specifies the date and time the key was created, in milliseconds since January 1, 1970. This tag is optional and informational only.
    ]]></string>
    <string name="authorization_list_origin_description"><![CDATA[
    Specifies where the key was created, if known. This tag may not be specified during key generation or import, and must be added to the key characteristics by the trustlet.
    ]]></string>
    <string name="authorization_list_rollbackResistant_description"><![CDATA[
    Indicates that the key is rollback-resistant, meaning that when deleted by deleteKey or deleteAllKeys, the key is guaranteed to be permanently deleted and unusable. It\'s possible that keys without this tag could be deleted and then restored from backup.
    ]]></string>
    <string name="authorization_list_rootOfTrust_description"><![CDATA[
    This collection of values defines key information about the device\'s status.<br/><p>
    verifiedBootKey: <br/>A secure hash of the key that verifies the system image.<br/><br/>
    deviceLocked: <br/>True if the device\'s bootloader is locked, which enables Verified Boot checking and prevents an unsigned device image from being flashed onto the device.<br/><br/>
    verifiedBootState: <br/>This data structure provides the device\'s current boot state, which represents the level of protection provided to the user and to apps after the device finishes booting.<br/><br/>
    verifiedBootHash: <br/>A digest of all data protected by Verified Boot. For devices that use the Android Verified Boot implementation of Verified Boot, this value contains the digest of the VBMeta struct, or the Verified Boot metadata structure.
    </p>]]></string>
    <string name="authorization_list_osVersion_description"><![CDATA[
    The version of the Android operating system associated with the Keymaster, specified as a six-digit integer. For example, version 8.1.0 is represented as 080100.
    ]]></string>
    <string name="authorization_list_osPatchLevel_description"><![CDATA[
    The month and year associated with the security patch that is being used within the Keymaster, specified as a six-digit integer. For example, the August 2018 patch is represented as 201808.
    ]]></string>
    <string name="authorization_list_attestationApplicationId_description"><![CDATA[
    This data structure reflects the Android platform\'s belief as to which apps are allowed to use the secret key material under attestation. The ID can comprise multiple packages if and only if multiple packages share the same UID.
    ]]></string>
    <string name="authorization_list_attestationIdBrand_description"><![CDATA[
    Provides the device\'s brand name, as returned by Build.BRAND in Android. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_attestationIdDevice_description"><![CDATA[
    Provides the device\'s device name, as returned by Build.DEVICE in Android. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_attestationIdProduct_description"><![CDATA[
    Provides the device\'s product name, as returned by Build.PRODUCT in Android. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_attestationIdSerial_description"><![CDATA[
    Provides the device\'s serial number. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_attestationIdImei_description"><![CDATA[
    Provides the IMEI one of the radios on the device to attested key generation/import operations. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_attestationIdSecondImei_description"><![CDATA[
    Provides an additional IMEI of one of the radios on the device to attested key generation/import operations. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_attestationIdMeid_description"><![CDATA[
    Provides the MEIDs for all radios on the device. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_attestationIdManufacturer_description"><![CDATA[
    Provides the device\'s manufacturer name, as returned by Build.MANUFACTURER in Android. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_attestationIdModel_description"><![CDATA[
    Provides the device\'s model name, as returned by Build.MODEL in Android. This field is set only when requesting attestation of the device\'s identifiers.
    ]]></string>
    <string name="authorization_list_vendorPatchLevel_description"><![CDATA[
    Specifies the vendor image security patch level that must be installed on the device for this key to be used. The value appears in the form YYYYMMDD, representing the date of the vendor security patch. For example, if a key were generated on an Android device with the vendor\'s August 1, 2018 security patch installed, this value would be 20180801.
    ]]></string>
    <string name="authorization_list_bootPatchLevel_description"><![CDATA[
    Specifies the kernel image security patch level that must be installed on the device for this key to be used. The value appears in the form YYYYMMDD, representing the date of the system security patch. For example, if a key were generated on an Android device with the system\'s August 5, 2018 security patch installed, this value would be 20180805.
    ]]></string>
    <string name="authorization_list_mgfDigest_description"><![CDATA[
    Specifies the MGF1 digest algorithms that may be used with RSA encryption/decryption with OAEP padding. Possible values are defined by the Digest enum.
    ]]></string>
    <string name="authorization_list_earlyBootOnly_description"><![CDATA[
    Keys tagged with EARLY_BOOT_ONLY may only be used during early boot, until IKeyMintDevice::earlyBootEnded() is called.
    ]]></string>
    <string name="authorization_list_usageCountLimit_description"><![CDATA[
    Specifies the number of times that a key may be used. This can be used to limit the use of a key. The value is a 32-bit integer representing the current number of attempts left.
    ]]></string>
    <string name="authorization_list_deviceUniqueAttestation_description"><![CDATA[
    It indicates that attestation using a device-unique key is requested, rather than a batch key. When a device-unique key is used, the returned chain should contain two or three certificates.
    ]]></string>
    <string name="authorization_list_identityCredentialKey_description"><![CDATA[
    It is used in attestations produced by the IIdentityCredential HAL when that HAL attests to Credential Keys. IIdentityCredential produces KeyMint-style attestations.
    ]]></string>
    <string name="authorization_list_moduleHash_description"><![CDATA[
    Specifies the SHA-256 hash of the DER-encoded module information.
    ]]></string>

    <string name="knox">Samsung Knox Attestation</string>
    <string name="knox_description"><![CDATA[
    Samsung Knox Attestation is a feature that verifies a Samsung device\'s data integrity by checking that the device is not rooted or running unofficial firmware.
    ]]></string>
    <string name="knox_challenge">@string/attestation_challenge</string>
    <string name="knox_challenge_description">@string/attestation_challenge_description</string>
    <string name="knox_id_attest">ID attestation</string>
    <string name="knox_id_attest_description"><![CDATA[
    Check if the IMEI and serial number have been modified.
    ]]></string>
    <string name="knox_integrity">Integrity status</string>
    <string name="knox_integrity_description"><![CDATA[
    The Keymaster Trusted Application (TA) in Secure World gathers this data:
    <ul>
    <li gap="8sp">The requesting app\'s package name, version code, and developer key.</li>
    <li gap="8sp">Signed info about the device\'s current state and expected environment.</li>
    <li gap="8sp">Hardware fuse readings indicating if untrusted firmware was ever loaded onto the device.</li>
    </ul>
    ]]></string>
    <string name="knox_record_hash">Attestation record hash</string>
    <string name="knox_record_hash_description"><![CDATA[
    a SHA256 digest of the TA requesting the integrity status data from ICCC.
    ]]></string>
</resources>
